@using Sitecore
@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@model Sitecore.Shell.Client.Bootstrap3.Layouts.Renderings.Bootstrap3.JavaScript.Bootstrap3Modals.Bootstrap3ModalRenderingModel
@{
  Model.Presenter = Presenters.Knockout;
  Model.Class = "modal fade";

  var controlId = Model.ControlId;
  var buttons = Model.Buttons.Split(new []{","}, StringSplitOptions.RemoveEmptyEntries);

  var width = Model.Width;
  if (width > 0)
  {
    Model.Attributes[HtmlTextWriterAttribute.Style] = string.Format("width: {0}px; margin-left: -{1}px", width, width / 2);
  }
}              
<div @Model.HtmlAttributes>
  <div class="modal-dialog">
    <div class="modal-content">          
      <div class="modal-header">
        @if (Model.HasCloseButton)
        {
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        }
        <h4 class="modal-title" data-bind="text: Header">@(this.Html.Raw(this.Model.Header))</h4>
      </div>
      <div class="modal-body">
        <p data-bind="text: Text">@Html.Sitecore().Translate(Model.Text)</p>
        @Html.Sitecore().Placeholder(controlId + ".Body")
      </div>
      <div class="modal-footer">
        @{
          foreach (var button in buttons)
          {
            if (!string.IsNullOrEmpty(button))
            {
              <button type="button" class="btn btn-default" data-bind="click: click" data-sc-button="@button">@ClientHost.Globalization.Translate(button.Trim())</button>
            }
          }
        }
        @Html.Sitecore().Placeholder(controlId + ".Buttons")
      </div>
    </div>  
  </div>
</div>
